syntax = "proto3";

package issues.service;
option go_package = "github.com/dearteno/helpdesk-system/services/issues/proto";

import "proto/common.proto";

// Issues service definition based on UML
service IssuesService {
  rpc CreateIssue(CreateIssueRequest) returns (IssueResponse);
  rpc GetIssue(GetIssueRequest) returns (IssueResponse);
  rpc UpdateIssue(UpdateIssueRequest) returns (IssueResponse);
  rpc DeleteIssue(DeleteIssueRequest) returns (helpdesk.common.Status);
  rpc ListIssues(ListIssuesRequest) returns (ListIssuesResponse);
  rpc SearchIssues(SearchIssuesRequest) returns (ListIssuesResponse);
}

// Issue entity based on UML diagram
message Issue {
  string id = 1;
  string developer_id = 2;
  string tester_id = 3;
  string title = 4;
  string type = 5;
  string description = 6;
  string status = 7;
  string created_at = 8;
  string updated_at = 9;
}

// Request and response messages
message CreateIssueRequest {
  string developer_id = 1;
  string tester_id = 2;
  string title = 3;
  string type = 4;
  string description = 5;
}

message GetIssueRequest {
  string id = 1;
}

message UpdateIssueRequest {
  string id = 1;
  string developer_id = 2;
  string tester_id = 3;
  string title = 4;
  string type = 5;
  string description = 6;
  string status = 7;
}

message DeleteIssueRequest {
  string id = 1;
}

message IssueResponse {
  Issue issue = 1;
  helpdesk.common.Status status = 2;
}

message ListIssuesRequest {
  helpdesk.common.PaginationRequest pagination = 1;
  string developer_id = 2;
  string tester_id = 3;
  string status = 4;
}

message ListIssuesResponse {
  repeated Issue issues = 1;
  helpdesk.common.Pagination pagination = 2;
  helpdesk.common.Status status = 3;
}

message SearchIssuesRequest {
  string query = 1;
  helpdesk.common.PaginationRequest pagination = 2;
}
